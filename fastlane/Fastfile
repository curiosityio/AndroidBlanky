fastlane_version "2.35.1"
default_platform :android

platform :android do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "testDevelopmentDebugUnitTest")
    notification(subtitle: "Tests PASS!", message: "Tests PASS!")
  end

  desc "Run Android tests while also taking screenshots"
  lane :android_test do
    gradle(task: "assemble", flavor: "Development", build_type: "Debug")
    gradle(task: "assembleDevelopmentDebugAndroidTest")
    screengrab
    notification(subtitle: "UI Tests PASS!", message: "UI Tests PASS!")
  end

  desc "Install dev build to connected device"
  lane :install_dev do
    gradle(
      task: "install",
      flavor: "Development",
      build_type: "Debug",
      flags: "--offline -PminSdk=22"
    )
    notification(subtitle: "Dev installed", message: "Done installing dev release to device.")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta_beta do
    foo = prompt(text: "Did you make sure to enter release notes in ./fastlane/beta_release_notes.txt? [y]")
    bar = prompt(text: "Did you increment the version in build.gradle? [y]")

    groups = ['internal-team']

    gradle(task: "assembleBetaRelease")
    crashlytics(api_token: 'apitoken',
             build_secret: 'buildsecret',
                 apk_path: './app/build/outputs/apk/app-beta-release.apk',
                   groups: groups,
               notes_path: './fastlane/beta_release_notes.txt',
            notifications: true)
    notification(subtitle: "Finished beta release", message: "Released new Beta build of app")
  end

  desc "Deploy a new version to the Google Play"
  lane :prod_deploy do
    foo = prompt(text: "Did you make sure to enter change log notes in /fastlane/metadata/android/en-US/app/changelog/? [y]")
    bar = prompt(text: "Did you increment the version CODE in build.gradle? [y]")

    gradle(task: "assembleProductionRelease")
    supply(apk: "app/build/outputs/apk/app-production-release.apk",
           package_name: 'com.levibostian.androidblanky',
           metadata_path: "./fastlane/metadata/android/en-US/app/",
           json_key: './fastlane/metadata/Google Play Android Developer-1234567890.json',
           validate_only: true)
  end

  lane :app_icon do
    android_appicon(appicon_image_file: 'fastlane/metadata/icons/app_icon.png',
      appicon_devices: [:phone, :tablet],
      appicon_path: 'app/src/main/res/mipmap')
  end

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    notification(subtitle: "ERROR", message: "Error doing fastlane task")
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end