buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        mavenCentral()
    }
    dependencies {
        classpath 'io.fabric.tools:gradle:1.25.4' // latest version is found here: https://s3.amazonaws.com/fabric-artifacts/public/io/fabric/tools/gradle/maven-metadata.xml
    }
}
apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "kotlin-allopen"
apply plugin: "com.jaredsburrows.spoon"

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'com.levibostian.androidblanky.testing.OpenClass'
}

repositories {
    maven { url 'http://s3.amazonaws.com/fabric-artifacts/public' }
    mavenCentral()
    google()
    jcenter()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" } // For Spoon snapshot, until 2.0.0 is released
}

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.0"

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    defaultConfig {
        applicationId "com.levibostian.androidblanky"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1528215515
        versionName "0.1.0"

        testInstrumentationRunner 'com.levibostian.androidblanky.AndroidTestTestRunner'

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        releaseSigning {
            storeFile rootProject.file('keystores/keystore-name.keystore')
            storePassword 'password'
            keyAlias 'android-blanky'
            keyPassword 'password'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            
            signingConfig signingConfigs.releaseSigning
        }
    }

    flavorDimensions "mode"
    productFlavors {
        development {
            // Set dev only rules to skip compiling some parts of app.
            minSdkVersion 23
            resConfigs "en", "xxhdpi"

            versionNameSuffix "-dev"
            dimension "mode"
            applicationIdSuffix ".dev"
        }
        beta {
            dimension "mode"
            applicationIdSuffix ".beta"
            versionNameSuffix "-beta"
        }
        production {
            dimension "mode"
        }
    }
    testOptions {
        animationsDisabled = true
    }
    kapt {
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
        }
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Support libraries
    def supportLibraryVersion = "1.0.0-alpha3"
    implementation "androidx.appcompat:appcompat:$supportLibraryVersion"
    implementation "com.google.android.material:material:$supportLibraryVersion"
    implementation "androidx.recyclerview:recyclerview:$supportLibraryVersion"
    implementation "androidx.preference:preference:$supportLibraryVersion"

    // Teller
    implementation 'com.github.levibostian:teller-android:0.0.1'

    // Wendy
    implementation 'com.github.levibostian:Wendy-Android:0.2.1-alpha'

    // Firebase
    implementation "com.google.firebase:firebase-core:16.0.1"
    implementation 'com.google.firebase:firebase-perf:16.0.0'
    implementation 'com.google.firebase:firebase-messaging:17.1.0'
    implementation 'com.google.firebase:firebase-invites:16.0.1'

    // Play Install Referrer Library
    implementation 'com.android.installreferrer:installreferrer:1.0'

    // Custom views
    implementation "com.github.levibostian:androidviews:0.1.4"

    // Architecture components
    def lifecycleVersion = "2.0.0-alpha1"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycleVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$lifecycleVersion"

    // Room
    def roomVersion = "2.0.0-alpha1"
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"

    // Dagger
    def daggerVersion = "2.8"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger:$daggerVersion"
    androidTestImplementation "com.google.dagger:dagger:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"

    // RxJava
    implementation "io.reactivex.rxjava2:rxandroid:2.0.2"
    implementation "io.reactivex.rxjava2:rxjava:2.1.13"
    implementation "com.f2prateek.rx.preferences2:rx-preferences:2.0.0"

    // Moshi
    def moshiVersion = "1.6.0"
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"
    implementation "com.squareup.moshi:moshi-adapters:$moshiVersion"

    // Retrofit
    def retrofitVersion = "2.4.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofitVersion"

    // OkHttp
    def okHttpVersion = "3.10.0"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    // Licenses fragment
    implementation 'com.github.levibostian:Android-License-Fragment:support-v4-SNAPSHOT'
    //implementation 'com.artit-k:license-fragment-support-v4:1.3.0' // Commenting out until it supports AndroidX.

    // Eventbus
    implementation "org.greenrobot:eventbus:3.0.0"

    // Crashlytics
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.4'

    // Timber
    implementation "com.jakewharton.timber:timber:4.7.0"

    // JUnit
    def junitVersion = "4.12"
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "junit:junit:$junitVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"

    // Truth
    def truthVersion = "0.40"
    testImplementation "com.google.truth:truth:$truthVersion"
    androidTestImplementation "com.google.truth:truth:$truthVersion"

    // Mockito
    def mockitoVersion = "2.18.3"
    def mockitoKotlinVersion = "1.5.0"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "com.nhaarman:mockito-kotlin-kt1.1:$mockitoKotlinVersion", {
        exclude group: 'org.jetbrains.kotlin'
        exclude group: 'org.mockito'
    }
    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"
    androidTestImplementation "com.nhaarman:mockito-kotlin-kt1.1:$mockitoKotlinVersion", {
        exclude group: 'org.jetbrains.kotlin'
        exclude group: 'org.mockito'
    }

    // Android Testing Support Library's runner and rules
    def androidTestLibVersion = "1.1.0-alpha3"
    androidTestImplementation "androidx.test:runner:$androidTestLibVersion"
    androidTestImplementation "androidx.test:rules:$androidTestLibVersion"

    // Espresso UI Testing
    def espressoVersion = "3.1.0-alpha3"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-web:$espressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    // Fastlane screengrab
    androidTestImplementation "tools.fastlane:screengrab:1.1.0"

    // Spoon client (Only the client since a gradle plugin is what runs the jar app for us)
    androidTestImplementation "com.squareup.spoon:spoon-client:2.0.0-SNAPSHOT"
}

configurations.all {
    resolutionStrategy {
        force "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    }
}

apply plugin: 'com.google.gms.google-services'

// Disable running android or unit tests on release versions of the app. We don't want to especially as we only want the all-open kotlin compiler plugin to run on debug code.
project.tasks.whenTaskAdded {
    if (it.name.contains("Test") && it.name.contains("Release")) {
        it.enabled = false
    }
}